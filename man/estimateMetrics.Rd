% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PerformanceMetrics.R
\name{estimateMetricsForAssay}
\alias{estimateMetricsForAssay}
\alias{estimatePerformanceMetrics}
\title{Estimate performance metrics.}
\usage{
estimateMetricsForAssay(object, assay, evalMetric = NULL,
  addColData = FALSE, evalFunction = NULL, tidy = FALSE, ...)

estimatePerformanceMetrics(object, addColData = FALSE, tidy = FALSE, ...)
}
\arguments{
\item{object}{A \code{\link{SummarizedBenchmark}} object.}

\item{assay}{A string with an assay name. Indicates the assay that should be
given as input to this performance metric.}

\item{evalMetric}{A string with the name of the evaluation metric.}

\item{addColData}{Logical (default: FALSE). If TRUE, the results are added to the
\code{\link{colData}} slot of the \code{\link{SummarizedExperiments}} object and
the object is returned. If FALSE, only a \code{\link{DataFrame}} with the results
is returned.}

\item{evalFunction}{A function that calculates a performance metric. It should
contain at least two arguments, query and truth, where query is the output vector
of a method and truth is the vector of ground true values. If additional parameters
are specified, they must contain default values. If this parameter is passed,
the metrics in the object are ignored and only this evaluation metric
is estimated.}

\item{tidy}{Logical (default: FALSE). If TRUE, a long formated \code{\link{data.frame}}
is returned.}

\item{...}{Additional parameters passed to the performance functions.}
}
\value{
Either a \code{\link{SummarizedBenchmark}} object, a \code{\link{DataFrame}} or
a \code{\link{data.frame}}.
}
\description{
These functions estimate the performance metrics, either passed as arguments or
added previously with the \code{\link{addPerformanceFunction}} function. The function
will estimate the performance metric for each method.
}
\section{Functions}{
\itemize{
\item \code{estimateMetricsForAssay}: Estimate performance metrics for a given assay

\item \code{estimatePerformanceMetrics}: Estimate performance metrics for all assays
}}

\examples{

data( sb )
sb <- addPerformanceFunction(
   object=sb,
   assay="qvalue",
   evalMetric="TPR",
   evalFunction = function( query, truth, alpha=0.1 ){
       goodHits <- sum( (query < alpha) & truth == 1 )
       goodHits / sum(truth == 1)
   }
)

qvalueMetrics <- estimateMetricsForAssay( sb, assay="qvalue" )
allMetrics <- estimatePerformanceMetrics( sb )
allMetricsTidy <- estimatePerformanceMetrics( sb, tidy=TRUE )

}
