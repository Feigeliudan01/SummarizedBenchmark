% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expandMethod.R
\name{expandMethod}
\alias{expandMethod}
\title{Expand method in BenchDesign object}
\usage{
expandMethod(bd, label, params, onlyone = NULL, .replace = FALSE,
  .overwrite = FALSE)
}
\arguments{
\item{bd}{\code{\link[=BenchDesign-class]{BenchDesign}} object.}

\item{label}{Character name of method to be expanded.}

\item{params}{Named list of quosure lists specifying the label of the
new methods to be added to the \code{\link[=BenchDesign-class]{BenchDesign}},
and the set of
parameters to overwrite in the original method definition for
each new method. Alternatively, if \code{onlyone} is non-\code{NULL}, a single quosure
list with \code{name = value} pairs specifying the label of the new methods and
the values to use for overwriting the parameter specified in \code{onlyone}.}

\item{onlyone}{Character name of a parameter to be modified. Only specify
if just a single parameter should be replaced in the original
method definition. Ignored if \code{NULL}. (default = \code{NULL})}

\item{.replace}{Logical whether original \code{label} method should be removed.
(default = \code{FALSE})}

\item{.overwrite}{Logical whether to overwrite the existing list of
parameters (\code{TRUE}) or to simply add the new parameters to the existing
list (\code{FALSE}). (default = \code{FALSE})}
}
\value{
Modified \code{\link[=BenchDesign-class]{BenchDesign}} object with new methods with
specified parameters added.
}
\description{
Takes a \code{\link[=BenchDesign-class]{BenchDesign}} object, the name of an
existing method, and new parameter specifications,
and returns a modified \code{\link[=BenchDesign-class]{BenchDesign}}
object with new methods added. The named method is "expanded" to mutliple methods
according to the specified set of parameters.
}
\examples{
## empty BenchDesign
bench <- BenchDesign()

## add basic 'padjust' method
bench <- addMethod(bench, label = "padjust",
                   func = p.adjust,
                   params = rlang::quos(p = pval, method = "none"))

## modify multiple parameters - params is a list of quosure lists
newparams <- list(bonf = rlang::quos(p = round(pval, 5), method = "bonferonni"),
                  bh = rlang::quos(p = round(pval, 3), method = "BH"))
bench_exp <- expandMethod(bench, label = "padjust", params = newparams))
BDMethodList(bench_exp)

## only modify a single parameter - params is a quosure list
newparams <- rlang::quos(bonf = "bonferonni", BH = "BH")
bench_exp <- expandMethod(bench, label = "padjust", onlyone = "method", params = newparams)
BDMethodList(bench_exp)

}
\seealso{
\code{\link{modifyMethod}}, \code{\link{addMethod}}, \code{\link{dropMethod}}
}
\author{
Patrick Kimes
}
